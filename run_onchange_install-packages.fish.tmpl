#!/usr/bin/env fish

source "$HOME/.config/fish/config.fish"

rm -f "$HOME/Brewfile"
touch "$HOME/Brewfile"

{{ if eq .chezmoi.os "darwin" -}}
{{ range .packages.darwin.taps -}}
echo 'tap {{ . | quote }}' >> "$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.brews -}}
echo 'brew {{ . | quote }}' >> "$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.casks -}}
echo 'cask {{ . | quote }}' >> "$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.mas -}}
echo 'mas {{ .name | quote }}, id: {{ .id }}' >> "$HOME/Brewfile"
{{ end -}}

brew bundle --file="$HOME/Brewfile"
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}

set -g flatpaks com.google.Chrome org.kde.okteta org.inkscape.Inkscape org.fontforge.FontForge arduino-ide-bin anki com.nextcloud.desktopclient.nextcloud tech.feliciano.pocket-casts com.getpostman.Postman org.qbittorrent.qBittorrent com.spotify.Client org.videolan.VLC us.zoom.Zoom org.libreoffice.LibreOffice com.slack.Slack

function install_typography
  echo "Installing fonts and extended typography"
  echo ""
  mkdir -p ~/.local/share/fonts
  for font in $fonts
    if not test -d "$HOME/.local/share/fonts/$font"
      curl -fsSL -o "$HOME/.local/share/fonts/$font.tar.xz" "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/$font.tar.xz"
      mkdir "$HOME/.local/share/fonts/$font/"
      tar -xf "$HOME/.local/share/fonts/$font.tar.xz" -C "$HOME/.local/share/fonts/$font/"
      rm "$HOME/.local/share/fonts/$font.tar.xz"
    end
  end
  fc-cache -f -v
  echo ""
end

function install_flatpaks
  echo "Installing Flatpaks..."
  for pack in $flatpaks
    sudo flatpak install -y flathub $pack
  end
  echo ""
end

sudo dnf install -y \
{{ range .packages.rpms -}}
{{ . }} \
{{ end }}
git

mkdir -p ~/.local/share/fonts

{{ range .packages.fonts -}}
if not test -d "$HOME/.local/share/fonts/{{ . }}"
  curl -fsSL -o "$HOME/.local/share/fonts/{{ . }}.tar.xz" "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/{{ . }}.tar.xz"
  mkdir "$HOME/.local/share/fonts/{{ . }}/"
  tar -xf "$HOME/.local/share/fonts/{{ . }}.tar.xz" -C "$HOME/.local/share/fonts/{{ . }}/"
  rm "$HOME/.local/share/fonts/{{ . }}.tar.xz"
end
{{ end }}

fc-cache -f -v

install_flatpaks
{{ end }}

{{ range .packages.asdf }}
asdf plugin add {{ . }}
asdf install {{ . }} latest &| read -z _install_latest
echo "\033[31;1;4Debug _install_latest: $_install_latest\033[0m"
if string match "*no latest version found" $_install_latest
  echo "\033[31;1;4No latest version found for {{ . }}\033[0m"
end
asdf set {{ . }} latest
{{ end }}

{{ range .packages.asdf_version }}
asdf plugin add {{ .name }}
asdf install {{ .name }} {{ .version }}
asdf set {{ .name }} {{ .version }}
{{ end }}

asdf plugin add neovim
asdf install neovim stable
asdf set neovim stable

asdf reshim

set _python_path (asdf which python)
set _ruby_path (asdf which ruby)
set _node_path (asdf which node)
set _perl_path (asdf which perl)
set _npm_path (asdf which npm)
set _cpan_path (asdf which cpan)
set _pip_path (asdf which pip)
set _gem_path (asdf which gem)

eval $_npm_path i -g neovim

if not test -e /usr/local/bin/composer
  php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
  php composer-setup.php
  php -r "unlink('composer-setup.php');"

  if test -d /usr/local/bin
    sudo mkdir -p /usr/local/bin
    fish_add_path /usr/local/bin
  end

  sudo mv composer.phar /usr/local/bin/composer
end

if not test -e /usr/local/bin/luarocks
  wget https://luarocks.org/releases/luarocks-3.11.1.tar.gz
  tar zxpf luarocks-3.11.1.tar.gz
  cd luarocks-3.11.1
  ./configure && make && sudo make install
  sudo luarocks install luasocket
end

if not test -e $HOME/.asdf/shims/cpanm
  eval "echo 'yes' | $_cpan_path App::cpanminus"
  asdf reshim
  set _cpanm_path (asdf which cpanm)
  eval $_cpanm_path Neovim::Ext
end

eval $_pip_path install --upgrade pip
eval $_pip_path install pynvim

eval $_gem_path install neovim

rm -f ~/.config/nvim/lua/options.lua
touch ~/.config/nvim/lua/options.lua
echo -e "vim.g.python3_host_prog = '$_python_path'" >> ~/.config/nvim/lua/options.lua
echo -e "vim.g.ruby_host_prog = '$_ruby_path'" >> ~/.config/nvim/lua/options.lua
echo -e "vim.g.node_host_prog = '$_node_path'" >> ~/.config/nvim/lua/options.lua
echo -e "vim.g.perl_host_prog = '$_perl_path'" >> ~/.config/nvim/lua/options.lua

exit 0

# vim: set ft=fish:
