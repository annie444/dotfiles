#!/usr/bin/env fish

source "$HOME/.config/fish/config.fish"

rm -f "$HOME/Brewfile"
touch "$HOME/Brewfile"

{{ if eq .chezmoi.os "darwin" -}}
{{ range .packages.darwin.taps -}}
echo 'tap {{ . | quote }}' >>"$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.brews -}}
echo 'brew {{ . | quote }}' >>"$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.casks -}}
echo 'cask {{ . | quote }}' >>"$HOME/Brewfile"
{{ end -}}
{{ range .packages.darwin.mas -}}
echo 'mas {{ .name | quote }}, id: {{ .id }}' >>"$HOME/Brewfile"
{{ end -}}

brew bundle --file="$HOME/Brewfile"
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}

sudo dnf install -y \
    {{ range .packages.rpms -}}
{{ . }} \
    {{ end }}
git

mkdir -p ~/.local/share/fonts

{{ range .packages.fonts -}}
if not test -d "$HOME/.local/share/fonts/{{ . }}"
    curl -fsSL -o "$HOME/.local/share/fonts/{{ . }}.tar.xz" "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/{{ . }}.tar.xz"
    mkdir "$HOME/.local/share/fonts/{{ . }}/"
    tar -xf "$HOME/.local/share/fonts/{{ . }}.tar.xz" -C "$HOME/.local/share/fonts/{{ . }}/"
    rm "$HOME/.local/share/fonts/{{ . }}.tar.xz"
end
{{ end }}

fc-cache -f -v

flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
{{ range .packages.flatpaks }}
flatpak install -y flathub {{ . }}
{{ end }}

{{ end }}
cd $HOME

{{ range .packages.asdf }}
asdf plugin add {{ . }}
asdf install {{ . }} latest &>out.log
cat out.log
set _install_latest (cat out.log)
if test "error installing version: no latest version found" = "$_install_latest"
    set_color red
    echo "No latest version found for {{ . }}"
    set_color normal
end
set --erase _install_latest
rm -f out.log
asdf set {{ . }} latest
{{ end }}

{{ range .packages.asdf_version }}
asdf plugin add {{ .name }}
asdf install {{ .name }} {{ .version }}
asdf set {{ .name }} {{ .version }}
{{ end }}

asdf reshim

function _test_var -a var -a val
    if test -z $val
        set _cwd (pwd)
        set_color red
        echo "No version set for $var in $_cwd"
        set_color normal
        set --erase _cwd
        exit 1
    end
end

set -g _python_path (asdf which python)
_test_var Python $_python_path
set -g _ruby_path (asdf which ruby)
_test_var Ruby $_ruby_path
set -g _node_path (asdf which node)
_test_var Node $_node_path
set -g _perl_path (asdf which perl)
_test_var Perl $_perl_path
set -g _npm_path (asdf which npm)
_test_var NPM $_npm_path
set -g _cpan_path (asdf which cpan)
_test_var Cpan $_cpan_path
set -g _pip_path (asdf which pip)
_test_var pip $_pip_path
set -g _gem_path (asdf which gem)
_test_var gem $_gem_path
set -g _lua_path (asdf which lua)
_test_var lua $_lua_path

eval "$_npm_path i -g neovim"

if not test -e /usr/local/bin/composer
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
    php composer-setup.php
    php -r "unlink('composer-setup.php');"

    if test -d /usr/local/bin
        sudo mkdir -p /usr/local/bin
        fish_add_path /usr/local/bin
    end

    sudo mv composer.phar /usr/local/bin/composer
end

if not test -e /usr/local/bin/luarocks
    wget https://luarocks.org/releases/luarocks-3.11.1.tar.gz
    tar zxpf luarocks-3.11.1.tar.gz
    cd luarocks-3.11.1
    ./configure --with-lua="$(dirname (dirname (asdf which lua)))"
    make
    make install
    luarocks install luasocket
end

if not test -e $HOME/.asdf/shims/cpanm
    eval "echo 'yes' | $_cpan_path App::cpanminus"
    asdf reshim
    set _cpanm_path (asdf which cpanm)
    eval $_cpanm_path Neovim::Ext
    asdf reshim
end

eval $_pip_path install --upgrade pip
eval $_pip_path install pynvim

eval $_gem_path install neovim

rm -f ~/.config/nvim/lua/options.lua
touch ~/.config/nvim/lua/options.lua
echo -e "vim.g.python3_host_prog = '$_python_path'" >>~/.config/nvim/lua/options.lua
echo -e "vim.g.ruby_host_prog = '$_ruby_path'" >>~/.config/nvim/lua/options.lua
echo -e "vim.g.node_host_prog = '$_node_path'" >>~/.config/nvim/lua/options.lua
echo -e "vim.g.perl_host_prog = '$_perl_path'" >>~/.config/nvim/lua/options.lua

exit 0

# vim: set ft=fish:
